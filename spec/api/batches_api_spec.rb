=begin
#ShipEngine API

#ShipEngine™ is the world's best multi-carrier shipping API, with more than 20 supported shipping carriers.  You can easily get and compare shipping rates, print labels, track your shipments, and validate addresses anywhere in the world.  ### Worldwide Major Carrier Support Access the top global carriers in minutes—instead of weeks. Simply [connect your existing carrier accounts](https://docs.shipengine.com/docs/setup-a-carrier) in the API dashboard, and then [begin creating labels](https://docs.shipengine.com/docs/use-a-specific-service).  ### Real-Time Tracking [Track packages](https://docs.shipengine.com/docs/track-a-package) across any of our 20+ supported carrier accounts and create tracking events to keep your customers up-to-date. Easily integrate real-time tracking information for shipments into your app, email, or SMS.  ### Get Rates Across Carriers Make sure you ship as cost-effectively as possible by [quickly comparing rates](https://docs.shipengine.com/docs/get-shipping-rates) using the ShipEngine Rates API. As long as you have the carrier connected to your account, you'll be able to see and compare different rates and services.  ### Global Address Validation No matter your shipping volume, failed deliveries and address change surcharges cut into your bottom line and damage perception with customers. Our address validation services ensure your packages make it to the right place the first time. [Learn how to leverage our address validation services here.](https://docs.shipengine.com/docs/address-validation)  ShipEngine supports address validation for over 180 countries, including the United States, Canada, Great Britain, Australia, Germany, France, Norway, Spain, Sweden, Israel, Italy, and more. 

OpenAPI spec version: 1.0.0
Contact: sales@shipengine.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.0-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for ShipEngineApi::BatchesApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'BatchesApi' do
  before do
    # run before each test
    @instance = ShipEngineApi::BatchesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of BatchesApi' do
    it 'should create an instance of BatchesApi' do
      expect(@instance).to be_instance_of(ShipEngineApi::BatchesApi)
    end
  end

  # unit tests for v1_batches_add_by_batch_id_post
  # batches.add_to_batch
  # 
  # @param batch_id 
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'v1_batches_add_by_batch_id_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1_batches_by_batch_id_get
  # batches.get_by_id
  # 
  # @param batch_id 
  # @param [Hash] opts the optional parameters
  # @return [Batch]
  describe 'v1_batches_by_batch_id_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1_batches_errors_by_batch_id_get
  # batches.find_errors
  # 
  # @param batch_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page 
  # @option opts [Integer] :pagesize 
  # @return [BatchErrorsResponseBody]
  describe 'v1_batches_errors_by_batch_id_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1_batches_external_batch_id_by_external_batch_id_get
  # batches.get_by_external_id
  # 
  # @param external_batch_id 
  # @param [Hash] opts the optional parameters
  # @return [Batch]
  describe 'v1_batches_external_batch_id_by_external_batch_id_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1_batches_get
  # batches.find
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :status 
  # @option opts [Integer] :page 
  # @option opts [Integer] :page_size 
  # @option opts [String] :sort_dir 
  # @option opts [String] :sort_by 
  # @return [ListBatchResponseBody]
  describe 'v1_batches_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1_batches_post
  # batches.create
  # 
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [Batch]
  describe 'v1_batches_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1_batches_process_labels_by_batch_id_post
  # batches.process
  # 
  # @param batch_id 
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'v1_batches_process_labels_by_batch_id_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1_batches_remove_by_batch_id_post
  # batches.remove_from_batch
  # 
  # @param batch_id 
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'v1_batches_remove_by_batch_id_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
