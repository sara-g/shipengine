=begin
#ShipEngine API

#ShipEngine™ is the world's best multi-carrier shipping API, with more than 20 supported shipping carriers.  You can easily get and compare shipping rates, print labels, track your shipments, and validate addresses anywhere in the world.  ### Worldwide Major Carrier Support Access the top global carriers in minutes—instead of weeks. Simply [connect your existing carrier accounts](https://docs.shipengine.com/docs/setup-a-carrier) in the API dashboard, and then [begin creating labels](https://docs.shipengine.com/docs/use-a-specific-service).  ### Real-Time Tracking [Track packages](https://docs.shipengine.com/docs/track-a-package) across any of our 20+ supported carrier accounts and create tracking events to keep your customers up-to-date. Easily integrate real-time tracking information for shipments into your app, email, or SMS.  ### Get Rates Across Carriers Make sure you ship as cost-effectively as possible by [quickly comparing rates](https://docs.shipengine.com/docs/get-shipping-rates) using the ShipEngine Rates API. As long as you have the carrier connected to your account, you'll be able to see and compare different rates and services.  ### Global Address Validation No matter your shipping volume, failed deliveries and address change surcharges cut into your bottom line and damage perception with customers. Our address validation services ensure your packages make it to the right place the first time. [Learn how to leverage our address validation services here.](https://docs.shipengine.com/docs/address-validation)  ShipEngine supports address validation for over 180 countries, including the United States, Canada, Great Britain, Australia, Germany, France, Norway, Spain, Sweden, Israel, Italy, and more. 

OpenAPI spec version: 1.0.0
Contact: sales@shipengine.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.0-SNAPSHOT

=end

require 'uri'

module ShipEngineApi
  class CarrierAccountsApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # access_worldwide_account_carrier.disconnect_account
    # 
    # @param carrier_id 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def v1_connections_carriers_access_worldwide_by_carrier_id_delete(carrier_id, opts = {})
      v1_connections_carriers_access_worldwide_by_carrier_id_delete_with_http_info(carrier_id, opts)
      nil
    end

    # access_worldwide_account_carrier.disconnect_account
    # 
    # @param carrier_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def v1_connections_carriers_access_worldwide_by_carrier_id_delete_with_http_info(carrier_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CarrierAccountsApi.v1_connections_carriers_access_worldwide_by_carrier_id_delete ...'
      end
      # verify the required parameter 'carrier_id' is set
      if @api_client.config.client_side_validation && carrier_id.nil?
        fail ArgumentError, "Missing the required parameter 'carrier_id' when calling CarrierAccountsApi.v1_connections_carriers_access_worldwide_by_carrier_id_delete"
      end
      if @api_client.config.client_side_validation && carrier_id.to_s.length > 25
        fail ArgumentError, 'invalid value for "carrier_id" when calling CarrierAccountsApi.v1_connections_carriers_access_worldwide_by_carrier_id_delete, the character length must be smaller than or equal to 25.'
      end

      if @api_client.config.client_side_validation && carrier_id.to_s.length < 1
        fail ArgumentError, 'invalid value for "carrier_id" when calling CarrierAccountsApi.v1_connections_carriers_access_worldwide_by_carrier_id_delete, the character length must be great than or equal to 1.'
      end

      if @api_client.config.client_side_validation && carrier_id !~ Regexp.new(/^se(-[a-z0-9]+)+$/)
        fail ArgumentError, "invalid value for 'carrier_id' when calling CarrierAccountsApi.v1_connections_carriers_access_worldwide_by_carrier_id_delete, must conform to the pattern /^se(-[a-z0-9]+)+$/."
      end

      # resource path
      local_var_path = '/v1/connections/carriers/access_worldwide/{carrier_id}'.sub('{' + 'carrier_id' + '}', carrier_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['api-key']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CarrierAccountsApi#v1_connections_carriers_access_worldwide_by_carrier_id_delete\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # access_worldwide_account_carrier.connect_account
    # 
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [ConnectAccountResponseBody]
    def v1_connections_carriers_access_worldwide_post(body, opts = {})
      data, _status_code, _headers = v1_connections_carriers_access_worldwide_post_with_http_info(body, opts)
      data
    end

    # access_worldwide_account_carrier.connect_account
    # 
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [Array<(ConnectAccountResponseBody, Fixnum, Hash)>] ConnectAccountResponseBody data, response status code and response headers
    def v1_connections_carriers_access_worldwide_post_with_http_info(body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CarrierAccountsApi.v1_connections_carriers_access_worldwide_post ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling CarrierAccountsApi.v1_connections_carriers_access_worldwide_post"
      end
      # resource path
      local_var_path = '/v1/connections/carriers/access_worldwide'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(body)
      auth_names = ['api-key']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ConnectAccountResponseBody')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CarrierAccountsApi#v1_connections_carriers_access_worldwide_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # apc_account_carrier.disconnect_account
    # 
    # @param carrier_id 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def v1_connections_carriers_apc_by_carrier_id_delete(carrier_id, opts = {})
      v1_connections_carriers_apc_by_carrier_id_delete_with_http_info(carrier_id, opts)
      nil
    end

    # apc_account_carrier.disconnect_account
    # 
    # @param carrier_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def v1_connections_carriers_apc_by_carrier_id_delete_with_http_info(carrier_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CarrierAccountsApi.v1_connections_carriers_apc_by_carrier_id_delete ...'
      end
      # verify the required parameter 'carrier_id' is set
      if @api_client.config.client_side_validation && carrier_id.nil?
        fail ArgumentError, "Missing the required parameter 'carrier_id' when calling CarrierAccountsApi.v1_connections_carriers_apc_by_carrier_id_delete"
      end
      if @api_client.config.client_side_validation && carrier_id.to_s.length > 25
        fail ArgumentError, 'invalid value for "carrier_id" when calling CarrierAccountsApi.v1_connections_carriers_apc_by_carrier_id_delete, the character length must be smaller than or equal to 25.'
      end

      if @api_client.config.client_side_validation && carrier_id.to_s.length < 1
        fail ArgumentError, 'invalid value for "carrier_id" when calling CarrierAccountsApi.v1_connections_carriers_apc_by_carrier_id_delete, the character length must be great than or equal to 1.'
      end

      if @api_client.config.client_side_validation && carrier_id !~ Regexp.new(/^se(-[a-z0-9]+)+$/)
        fail ArgumentError, "invalid value for 'carrier_id' when calling CarrierAccountsApi.v1_connections_carriers_apc_by_carrier_id_delete, must conform to the pattern /^se(-[a-z0-9]+)+$/."
      end

      # resource path
      local_var_path = '/v1/connections/carriers/apc/{carrier_id}'.sub('{' + 'carrier_id' + '}', carrier_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['api-key']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CarrierAccountsApi#v1_connections_carriers_apc_by_carrier_id_delete\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # apc_account_carrier.connect_account
    # 
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [ConnectAccountResponseBody]
    def v1_connections_carriers_apc_post(body, opts = {})
      data, _status_code, _headers = v1_connections_carriers_apc_post_with_http_info(body, opts)
      data
    end

    # apc_account_carrier.connect_account
    # 
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [Array<(ConnectAccountResponseBody, Fixnum, Hash)>] ConnectAccountResponseBody data, response status code and response headers
    def v1_connections_carriers_apc_post_with_http_info(body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CarrierAccountsApi.v1_connections_carriers_apc_post ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling CarrierAccountsApi.v1_connections_carriers_apc_post"
      end
      # resource path
      local_var_path = '/v1/connections/carriers/apc'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(body)
      auth_names = ['api-key']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ConnectAccountResponseBody')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CarrierAccountsApi#v1_connections_carriers_apc_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # asendia_account_carrier.disconnect_account
    # 
    # @param carrier_id 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def v1_connections_carriers_asendia_by_carrier_id_delete(carrier_id, opts = {})
      v1_connections_carriers_asendia_by_carrier_id_delete_with_http_info(carrier_id, opts)
      nil
    end

    # asendia_account_carrier.disconnect_account
    # 
    # @param carrier_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def v1_connections_carriers_asendia_by_carrier_id_delete_with_http_info(carrier_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CarrierAccountsApi.v1_connections_carriers_asendia_by_carrier_id_delete ...'
      end
      # verify the required parameter 'carrier_id' is set
      if @api_client.config.client_side_validation && carrier_id.nil?
        fail ArgumentError, "Missing the required parameter 'carrier_id' when calling CarrierAccountsApi.v1_connections_carriers_asendia_by_carrier_id_delete"
      end
      if @api_client.config.client_side_validation && carrier_id.to_s.length > 25
        fail ArgumentError, 'invalid value for "carrier_id" when calling CarrierAccountsApi.v1_connections_carriers_asendia_by_carrier_id_delete, the character length must be smaller than or equal to 25.'
      end

      if @api_client.config.client_side_validation && carrier_id.to_s.length < 1
        fail ArgumentError, 'invalid value for "carrier_id" when calling CarrierAccountsApi.v1_connections_carriers_asendia_by_carrier_id_delete, the character length must be great than or equal to 1.'
      end

      if @api_client.config.client_side_validation && carrier_id !~ Regexp.new(/^se(-[a-z0-9]+)+$/)
        fail ArgumentError, "invalid value for 'carrier_id' when calling CarrierAccountsApi.v1_connections_carriers_asendia_by_carrier_id_delete, must conform to the pattern /^se(-[a-z0-9]+)+$/."
      end

      # resource path
      local_var_path = '/v1/connections/carriers/asendia/{carrier_id}'.sub('{' + 'carrier_id' + '}', carrier_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['api-key']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CarrierAccountsApi#v1_connections_carriers_asendia_by_carrier_id_delete\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # asendia_account_carrier.connect_account
    # 
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [ConnectAccountResponseBody]
    def v1_connections_carriers_asendia_post(body, opts = {})
      data, _status_code, _headers = v1_connections_carriers_asendia_post_with_http_info(body, opts)
      data
    end

    # asendia_account_carrier.connect_account
    # 
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [Array<(ConnectAccountResponseBody, Fixnum, Hash)>] ConnectAccountResponseBody data, response status code and response headers
    def v1_connections_carriers_asendia_post_with_http_info(body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CarrierAccountsApi.v1_connections_carriers_asendia_post ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling CarrierAccountsApi.v1_connections_carriers_asendia_post"
      end
      # resource path
      local_var_path = '/v1/connections/carriers/asendia'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(body)
      auth_names = ['api-key']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ConnectAccountResponseBody')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CarrierAccountsApi#v1_connections_carriers_asendia_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # dhl_ecommerce_account_carrier.disconnect_account
    # 
    # @param carrier_id 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def v1_connections_carriers_dhl_ecommerce_by_carrier_id_delete(carrier_id, opts = {})
      v1_connections_carriers_dhl_ecommerce_by_carrier_id_delete_with_http_info(carrier_id, opts)
      nil
    end

    # dhl_ecommerce_account_carrier.disconnect_account
    # 
    # @param carrier_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def v1_connections_carriers_dhl_ecommerce_by_carrier_id_delete_with_http_info(carrier_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CarrierAccountsApi.v1_connections_carriers_dhl_ecommerce_by_carrier_id_delete ...'
      end
      # verify the required parameter 'carrier_id' is set
      if @api_client.config.client_side_validation && carrier_id.nil?
        fail ArgumentError, "Missing the required parameter 'carrier_id' when calling CarrierAccountsApi.v1_connections_carriers_dhl_ecommerce_by_carrier_id_delete"
      end
      if @api_client.config.client_side_validation && carrier_id.to_s.length > 25
        fail ArgumentError, 'invalid value for "carrier_id" when calling CarrierAccountsApi.v1_connections_carriers_dhl_ecommerce_by_carrier_id_delete, the character length must be smaller than or equal to 25.'
      end

      if @api_client.config.client_side_validation && carrier_id.to_s.length < 1
        fail ArgumentError, 'invalid value for "carrier_id" when calling CarrierAccountsApi.v1_connections_carriers_dhl_ecommerce_by_carrier_id_delete, the character length must be great than or equal to 1.'
      end

      if @api_client.config.client_side_validation && carrier_id !~ Regexp.new(/^se(-[a-z0-9]+)+$/)
        fail ArgumentError, "invalid value for 'carrier_id' when calling CarrierAccountsApi.v1_connections_carriers_dhl_ecommerce_by_carrier_id_delete, must conform to the pattern /^se(-[a-z0-9]+)+$/."
      end

      # resource path
      local_var_path = '/v1/connections/carriers/dhl_ecommerce/{carrier_id}'.sub('{' + 'carrier_id' + '}', carrier_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['api-key']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CarrierAccountsApi#v1_connections_carriers_dhl_ecommerce_by_carrier_id_delete\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # dhl_ecommerce_account_carrier.connect_account
    # 
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [ConnectAccountResponseBody]
    def v1_connections_carriers_dhl_ecommerce_post(body, opts = {})
      data, _status_code, _headers = v1_connections_carriers_dhl_ecommerce_post_with_http_info(body, opts)
      data
    end

    # dhl_ecommerce_account_carrier.connect_account
    # 
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [Array<(ConnectAccountResponseBody, Fixnum, Hash)>] ConnectAccountResponseBody data, response status code and response headers
    def v1_connections_carriers_dhl_ecommerce_post_with_http_info(body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CarrierAccountsApi.v1_connections_carriers_dhl_ecommerce_post ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling CarrierAccountsApi.v1_connections_carriers_dhl_ecommerce_post"
      end
      # resource path
      local_var_path = '/v1/connections/carriers/dhl_ecommerce'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(body)
      auth_names = ['api-key']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ConnectAccountResponseBody')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CarrierAccountsApi#v1_connections_carriers_dhl_ecommerce_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # dhl_express_account_carrier.disconnect_account
    # 
    # @param carrier_id 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def v1_connections_carriers_dhl_express_by_carrier_id_delete(carrier_id, opts = {})
      v1_connections_carriers_dhl_express_by_carrier_id_delete_with_http_info(carrier_id, opts)
      nil
    end

    # dhl_express_account_carrier.disconnect_account
    # 
    # @param carrier_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def v1_connections_carriers_dhl_express_by_carrier_id_delete_with_http_info(carrier_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CarrierAccountsApi.v1_connections_carriers_dhl_express_by_carrier_id_delete ...'
      end
      # verify the required parameter 'carrier_id' is set
      if @api_client.config.client_side_validation && carrier_id.nil?
        fail ArgumentError, "Missing the required parameter 'carrier_id' when calling CarrierAccountsApi.v1_connections_carriers_dhl_express_by_carrier_id_delete"
      end
      if @api_client.config.client_side_validation && carrier_id.to_s.length > 25
        fail ArgumentError, 'invalid value for "carrier_id" when calling CarrierAccountsApi.v1_connections_carriers_dhl_express_by_carrier_id_delete, the character length must be smaller than or equal to 25.'
      end

      if @api_client.config.client_side_validation && carrier_id.to_s.length < 1
        fail ArgumentError, 'invalid value for "carrier_id" when calling CarrierAccountsApi.v1_connections_carriers_dhl_express_by_carrier_id_delete, the character length must be great than or equal to 1.'
      end

      if @api_client.config.client_side_validation && carrier_id !~ Regexp.new(/^se(-[a-z0-9]+)+$/)
        fail ArgumentError, "invalid value for 'carrier_id' when calling CarrierAccountsApi.v1_connections_carriers_dhl_express_by_carrier_id_delete, must conform to the pattern /^se(-[a-z0-9]+)+$/."
      end

      # resource path
      local_var_path = '/v1/connections/carriers/dhl_express/{carrier_id}'.sub('{' + 'carrier_id' + '}', carrier_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['api-key']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CarrierAccountsApi#v1_connections_carriers_dhl_express_by_carrier_id_delete\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # dhl_express_account_carrier.connect_account
    # 
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [ConnectAccountResponseBody]
    def v1_connections_carriers_dhl_express_post(body, opts = {})
      data, _status_code, _headers = v1_connections_carriers_dhl_express_post_with_http_info(body, opts)
      data
    end

    # dhl_express_account_carrier.connect_account
    # 
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [Array<(ConnectAccountResponseBody, Fixnum, Hash)>] ConnectAccountResponseBody data, response status code and response headers
    def v1_connections_carriers_dhl_express_post_with_http_info(body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CarrierAccountsApi.v1_connections_carriers_dhl_express_post ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling CarrierAccountsApi.v1_connections_carriers_dhl_express_post"
      end
      # resource path
      local_var_path = '/v1/connections/carriers/dhl_express'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(body)
      auth_names = ['api-key']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ConnectAccountResponseBody')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CarrierAccountsApi#v1_connections_carriers_dhl_express_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # dhl_express_account_carrier.get_settings
    # 
    # @param carrier_id 
    # @param [Hash] opts the optional parameters
    # @return [DhlExpressAccountSettings]
    def v1_connections_carriers_dhl_express_settings_by_carrier_id_get(carrier_id, opts = {})
      data, _status_code, _headers = v1_connections_carriers_dhl_express_settings_by_carrier_id_get_with_http_info(carrier_id, opts)
      data
    end

    # dhl_express_account_carrier.get_settings
    # 
    # @param carrier_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(DhlExpressAccountSettings, Fixnum, Hash)>] DhlExpressAccountSettings data, response status code and response headers
    def v1_connections_carriers_dhl_express_settings_by_carrier_id_get_with_http_info(carrier_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CarrierAccountsApi.v1_connections_carriers_dhl_express_settings_by_carrier_id_get ...'
      end
      # verify the required parameter 'carrier_id' is set
      if @api_client.config.client_side_validation && carrier_id.nil?
        fail ArgumentError, "Missing the required parameter 'carrier_id' when calling CarrierAccountsApi.v1_connections_carriers_dhl_express_settings_by_carrier_id_get"
      end
      if @api_client.config.client_side_validation && carrier_id.to_s.length > 25
        fail ArgumentError, 'invalid value for "carrier_id" when calling CarrierAccountsApi.v1_connections_carriers_dhl_express_settings_by_carrier_id_get, the character length must be smaller than or equal to 25.'
      end

      if @api_client.config.client_side_validation && carrier_id.to_s.length < 1
        fail ArgumentError, 'invalid value for "carrier_id" when calling CarrierAccountsApi.v1_connections_carriers_dhl_express_settings_by_carrier_id_get, the character length must be great than or equal to 1.'
      end

      if @api_client.config.client_side_validation && carrier_id !~ Regexp.new(/^se(-[a-z0-9]+)+$/)
        fail ArgumentError, "invalid value for 'carrier_id' when calling CarrierAccountsApi.v1_connections_carriers_dhl_express_settings_by_carrier_id_get, must conform to the pattern /^se(-[a-z0-9]+)+$/."
      end

      # resource path
      local_var_path = '/v1/connections/carriers/dhl_express/{carrier_id}/settings'.sub('{' + 'carrier_id' + '}', carrier_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['api-key']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'DhlExpressAccountSettings')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CarrierAccountsApi#v1_connections_carriers_dhl_express_settings_by_carrier_id_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # dhl_express_account_carrier.update_settings
    # 
    # @param carrier_id 
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def v1_connections_carriers_dhl_express_settings_by_carrier_id_put(carrier_id, body, opts = {})
      v1_connections_carriers_dhl_express_settings_by_carrier_id_put_with_http_info(carrier_id, body, opts)
      nil
    end

    # dhl_express_account_carrier.update_settings
    # 
    # @param carrier_id 
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def v1_connections_carriers_dhl_express_settings_by_carrier_id_put_with_http_info(carrier_id, body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CarrierAccountsApi.v1_connections_carriers_dhl_express_settings_by_carrier_id_put ...'
      end
      # verify the required parameter 'carrier_id' is set
      if @api_client.config.client_side_validation && carrier_id.nil?
        fail ArgumentError, "Missing the required parameter 'carrier_id' when calling CarrierAccountsApi.v1_connections_carriers_dhl_express_settings_by_carrier_id_put"
      end
      if @api_client.config.client_side_validation && carrier_id.to_s.length > 25
        fail ArgumentError, 'invalid value for "carrier_id" when calling CarrierAccountsApi.v1_connections_carriers_dhl_express_settings_by_carrier_id_put, the character length must be smaller than or equal to 25.'
      end

      if @api_client.config.client_side_validation && carrier_id.to_s.length < 1
        fail ArgumentError, 'invalid value for "carrier_id" when calling CarrierAccountsApi.v1_connections_carriers_dhl_express_settings_by_carrier_id_put, the character length must be great than or equal to 1.'
      end

      if @api_client.config.client_side_validation && carrier_id !~ Regexp.new(/^se(-[a-z0-9]+)+$/)
        fail ArgumentError, "invalid value for 'carrier_id' when calling CarrierAccountsApi.v1_connections_carriers_dhl_express_settings_by_carrier_id_put, must conform to the pattern /^se(-[a-z0-9]+)+$/."
      end

      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling CarrierAccountsApi.v1_connections_carriers_dhl_express_settings_by_carrier_id_put"
      end
      # resource path
      local_var_path = '/v1/connections/carriers/dhl_express/{carrier_id}/settings'.sub('{' + 'carrier_id' + '}', carrier_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(body)
      auth_names = ['api-key']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CarrierAccountsApi#v1_connections_carriers_dhl_express_settings_by_carrier_id_put\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # dhl_express_uk_account_carrier.disconnect_account
    # 
    # @param carrier_id 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def v1_connections_carriers_dhl_express_uk_by_carrier_id_delete(carrier_id, opts = {})
      v1_connections_carriers_dhl_express_uk_by_carrier_id_delete_with_http_info(carrier_id, opts)
      nil
    end

    # dhl_express_uk_account_carrier.disconnect_account
    # 
    # @param carrier_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def v1_connections_carriers_dhl_express_uk_by_carrier_id_delete_with_http_info(carrier_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CarrierAccountsApi.v1_connections_carriers_dhl_express_uk_by_carrier_id_delete ...'
      end
      # verify the required parameter 'carrier_id' is set
      if @api_client.config.client_side_validation && carrier_id.nil?
        fail ArgumentError, "Missing the required parameter 'carrier_id' when calling CarrierAccountsApi.v1_connections_carriers_dhl_express_uk_by_carrier_id_delete"
      end
      if @api_client.config.client_side_validation && carrier_id.to_s.length > 25
        fail ArgumentError, 'invalid value for "carrier_id" when calling CarrierAccountsApi.v1_connections_carriers_dhl_express_uk_by_carrier_id_delete, the character length must be smaller than or equal to 25.'
      end

      if @api_client.config.client_side_validation && carrier_id.to_s.length < 1
        fail ArgumentError, 'invalid value for "carrier_id" when calling CarrierAccountsApi.v1_connections_carriers_dhl_express_uk_by_carrier_id_delete, the character length must be great than or equal to 1.'
      end

      if @api_client.config.client_side_validation && carrier_id !~ Regexp.new(/^se(-[a-z0-9]+)+$/)
        fail ArgumentError, "invalid value for 'carrier_id' when calling CarrierAccountsApi.v1_connections_carriers_dhl_express_uk_by_carrier_id_delete, must conform to the pattern /^se(-[a-z0-9]+)+$/."
      end

      # resource path
      local_var_path = '/v1/connections/carriers/dhl_express_uk/{carrier_id}'.sub('{' + 'carrier_id' + '}', carrier_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['api-key']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CarrierAccountsApi#v1_connections_carriers_dhl_express_uk_by_carrier_id_delete\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # dhl_express_uk_account_carrier.connect_account
    # 
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [ConnectAccountResponseBody]
    def v1_connections_carriers_dhl_express_uk_post(body, opts = {})
      data, _status_code, _headers = v1_connections_carriers_dhl_express_uk_post_with_http_info(body, opts)
      data
    end

    # dhl_express_uk_account_carrier.connect_account
    # 
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [Array<(ConnectAccountResponseBody, Fixnum, Hash)>] ConnectAccountResponseBody data, response status code and response headers
    def v1_connections_carriers_dhl_express_uk_post_with_http_info(body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CarrierAccountsApi.v1_connections_carriers_dhl_express_uk_post ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling CarrierAccountsApi.v1_connections_carriers_dhl_express_uk_post"
      end
      # resource path
      local_var_path = '/v1/connections/carriers/dhl_express_uk'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(body)
      auth_names = ['api-key']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ConnectAccountResponseBody')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CarrierAccountsApi#v1_connections_carriers_dhl_express_uk_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # dpd_account_carrier.disconnect_account
    # 
    # @param carrier_id 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def v1_connections_carriers_dpd_by_carrier_id_delete(carrier_id, opts = {})
      v1_connections_carriers_dpd_by_carrier_id_delete_with_http_info(carrier_id, opts)
      nil
    end

    # dpd_account_carrier.disconnect_account
    # 
    # @param carrier_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def v1_connections_carriers_dpd_by_carrier_id_delete_with_http_info(carrier_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CarrierAccountsApi.v1_connections_carriers_dpd_by_carrier_id_delete ...'
      end
      # verify the required parameter 'carrier_id' is set
      if @api_client.config.client_side_validation && carrier_id.nil?
        fail ArgumentError, "Missing the required parameter 'carrier_id' when calling CarrierAccountsApi.v1_connections_carriers_dpd_by_carrier_id_delete"
      end
      if @api_client.config.client_side_validation && carrier_id.to_s.length > 25
        fail ArgumentError, 'invalid value for "carrier_id" when calling CarrierAccountsApi.v1_connections_carriers_dpd_by_carrier_id_delete, the character length must be smaller than or equal to 25.'
      end

      if @api_client.config.client_side_validation && carrier_id.to_s.length < 1
        fail ArgumentError, 'invalid value for "carrier_id" when calling CarrierAccountsApi.v1_connections_carriers_dpd_by_carrier_id_delete, the character length must be great than or equal to 1.'
      end

      if @api_client.config.client_side_validation && carrier_id !~ Regexp.new(/^se(-[a-z0-9]+)+$/)
        fail ArgumentError, "invalid value for 'carrier_id' when calling CarrierAccountsApi.v1_connections_carriers_dpd_by_carrier_id_delete, must conform to the pattern /^se(-[a-z0-9]+)+$/."
      end

      # resource path
      local_var_path = '/v1/connections/carriers/dpd/{carrier_id}'.sub('{' + 'carrier_id' + '}', carrier_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['api-key']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CarrierAccountsApi#v1_connections_carriers_dpd_by_carrier_id_delete\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # dpd_account_carrier.connect_account
    # 
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [ConnectAccountResponseBody]
    def v1_connections_carriers_dpd_post(body, opts = {})
      data, _status_code, _headers = v1_connections_carriers_dpd_post_with_http_info(body, opts)
      data
    end

    # dpd_account_carrier.connect_account
    # 
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [Array<(ConnectAccountResponseBody, Fixnum, Hash)>] ConnectAccountResponseBody data, response status code and response headers
    def v1_connections_carriers_dpd_post_with_http_info(body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CarrierAccountsApi.v1_connections_carriers_dpd_post ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling CarrierAccountsApi.v1_connections_carriers_dpd_post"
      end
      # resource path
      local_var_path = '/v1/connections/carriers/dpd'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(body)
      auth_names = ['api-key']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ConnectAccountResponseBody')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CarrierAccountsApi#v1_connections_carriers_dpd_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # endicia_account_carrier.disconnect_account
    # 
    # @param carrier_id 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def v1_connections_carriers_endicia_by_carrier_id_delete(carrier_id, opts = {})
      v1_connections_carriers_endicia_by_carrier_id_delete_with_http_info(carrier_id, opts)
      nil
    end

    # endicia_account_carrier.disconnect_account
    # 
    # @param carrier_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def v1_connections_carriers_endicia_by_carrier_id_delete_with_http_info(carrier_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CarrierAccountsApi.v1_connections_carriers_endicia_by_carrier_id_delete ...'
      end
      # verify the required parameter 'carrier_id' is set
      if @api_client.config.client_side_validation && carrier_id.nil?
        fail ArgumentError, "Missing the required parameter 'carrier_id' when calling CarrierAccountsApi.v1_connections_carriers_endicia_by_carrier_id_delete"
      end
      if @api_client.config.client_side_validation && carrier_id.to_s.length > 25
        fail ArgumentError, 'invalid value for "carrier_id" when calling CarrierAccountsApi.v1_connections_carriers_endicia_by_carrier_id_delete, the character length must be smaller than or equal to 25.'
      end

      if @api_client.config.client_side_validation && carrier_id.to_s.length < 1
        fail ArgumentError, 'invalid value for "carrier_id" when calling CarrierAccountsApi.v1_connections_carriers_endicia_by_carrier_id_delete, the character length must be great than or equal to 1.'
      end

      if @api_client.config.client_side_validation && carrier_id !~ Regexp.new(/^se(-[a-z0-9]+)+$/)
        fail ArgumentError, "invalid value for 'carrier_id' when calling CarrierAccountsApi.v1_connections_carriers_endicia_by_carrier_id_delete, must conform to the pattern /^se(-[a-z0-9]+)+$/."
      end

      # resource path
      local_var_path = '/v1/connections/carriers/endicia/{carrier_id}'.sub('{' + 'carrier_id' + '}', carrier_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['api-key']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CarrierAccountsApi#v1_connections_carriers_endicia_by_carrier_id_delete\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # endicia_account_carrier.connect_account
    # 
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [ConnectAccountResponseBody]
    def v1_connections_carriers_endicia_post(body, opts = {})
      data, _status_code, _headers = v1_connections_carriers_endicia_post_with_http_info(body, opts)
      data
    end

    # endicia_account_carrier.connect_account
    # 
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [Array<(ConnectAccountResponseBody, Fixnum, Hash)>] ConnectAccountResponseBody data, response status code and response headers
    def v1_connections_carriers_endicia_post_with_http_info(body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CarrierAccountsApi.v1_connections_carriers_endicia_post ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling CarrierAccountsApi.v1_connections_carriers_endicia_post"
      end
      # resource path
      local_var_path = '/v1/connections/carriers/endicia'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(body)
      auth_names = ['api-key']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ConnectAccountResponseBody')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CarrierAccountsApi#v1_connections_carriers_endicia_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # fedex_account_carrier.disconnect_account
    # 
    # @param carrier_id 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def v1_connections_carriers_fedex_by_carrier_id_delete(carrier_id, opts = {})
      v1_connections_carriers_fedex_by_carrier_id_delete_with_http_info(carrier_id, opts)
      nil
    end

    # fedex_account_carrier.disconnect_account
    # 
    # @param carrier_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def v1_connections_carriers_fedex_by_carrier_id_delete_with_http_info(carrier_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CarrierAccountsApi.v1_connections_carriers_fedex_by_carrier_id_delete ...'
      end
      # verify the required parameter 'carrier_id' is set
      if @api_client.config.client_side_validation && carrier_id.nil?
        fail ArgumentError, "Missing the required parameter 'carrier_id' when calling CarrierAccountsApi.v1_connections_carriers_fedex_by_carrier_id_delete"
      end
      if @api_client.config.client_side_validation && carrier_id.to_s.length > 25
        fail ArgumentError, 'invalid value for "carrier_id" when calling CarrierAccountsApi.v1_connections_carriers_fedex_by_carrier_id_delete, the character length must be smaller than or equal to 25.'
      end

      if @api_client.config.client_side_validation && carrier_id.to_s.length < 1
        fail ArgumentError, 'invalid value for "carrier_id" when calling CarrierAccountsApi.v1_connections_carriers_fedex_by_carrier_id_delete, the character length must be great than or equal to 1.'
      end

      if @api_client.config.client_side_validation && carrier_id !~ Regexp.new(/^se(-[a-z0-9]+)+$/)
        fail ArgumentError, "invalid value for 'carrier_id' when calling CarrierAccountsApi.v1_connections_carriers_fedex_by_carrier_id_delete, must conform to the pattern /^se(-[a-z0-9]+)+$/."
      end

      # resource path
      local_var_path = '/v1/connections/carriers/fedex/{carrier_id}'.sub('{' + 'carrier_id' + '}', carrier_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['api-key']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CarrierAccountsApi#v1_connections_carriers_fedex_by_carrier_id_delete\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # fedex_account_carrier.connect_account
    # 
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [ConnectAccountResponseBody]
    def v1_connections_carriers_fedex_post(body, opts = {})
      data, _status_code, _headers = v1_connections_carriers_fedex_post_with_http_info(body, opts)
      data
    end

    # fedex_account_carrier.connect_account
    # 
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [Array<(ConnectAccountResponseBody, Fixnum, Hash)>] ConnectAccountResponseBody data, response status code and response headers
    def v1_connections_carriers_fedex_post_with_http_info(body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CarrierAccountsApi.v1_connections_carriers_fedex_post ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling CarrierAccountsApi.v1_connections_carriers_fedex_post"
      end
      # resource path
      local_var_path = '/v1/connections/carriers/fedex'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(body)
      auth_names = ['api-key']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ConnectAccountResponseBody')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CarrierAccountsApi#v1_connections_carriers_fedex_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # fedex_account_carrier.get_settings
    # 
    # @param carrier_id 
    # @param [Hash] opts the optional parameters
    # @return [UpsAccountSettings]
    def v1_connections_carriers_fedex_settings_by_carrier_id_get(carrier_id, opts = {})
      data, _status_code, _headers = v1_connections_carriers_fedex_settings_by_carrier_id_get_with_http_info(carrier_id, opts)
      data
    end

    # fedex_account_carrier.get_settings
    # 
    # @param carrier_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(UpsAccountSettings, Fixnum, Hash)>] UpsAccountSettings data, response status code and response headers
    def v1_connections_carriers_fedex_settings_by_carrier_id_get_with_http_info(carrier_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CarrierAccountsApi.v1_connections_carriers_fedex_settings_by_carrier_id_get ...'
      end
      # verify the required parameter 'carrier_id' is set
      if @api_client.config.client_side_validation && carrier_id.nil?
        fail ArgumentError, "Missing the required parameter 'carrier_id' when calling CarrierAccountsApi.v1_connections_carriers_fedex_settings_by_carrier_id_get"
      end
      if @api_client.config.client_side_validation && carrier_id.to_s.length > 25
        fail ArgumentError, 'invalid value for "carrier_id" when calling CarrierAccountsApi.v1_connections_carriers_fedex_settings_by_carrier_id_get, the character length must be smaller than or equal to 25.'
      end

      if @api_client.config.client_side_validation && carrier_id.to_s.length < 1
        fail ArgumentError, 'invalid value for "carrier_id" when calling CarrierAccountsApi.v1_connections_carriers_fedex_settings_by_carrier_id_get, the character length must be great than or equal to 1.'
      end

      if @api_client.config.client_side_validation && carrier_id !~ Regexp.new(/^se(-[a-z0-9]+)+$/)
        fail ArgumentError, "invalid value for 'carrier_id' when calling CarrierAccountsApi.v1_connections_carriers_fedex_settings_by_carrier_id_get, must conform to the pattern /^se(-[a-z0-9]+)+$/."
      end

      # resource path
      local_var_path = '/v1/connections/carriers/fedex/{carrier_id}/settings'.sub('{' + 'carrier_id' + '}', carrier_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['api-key']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'UpsAccountSettings')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CarrierAccountsApi#v1_connections_carriers_fedex_settings_by_carrier_id_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # fedex_account_carrier.update_settings
    # 
    # @param carrier_id 
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def v1_connections_carriers_fedex_settings_by_carrier_id_put(carrier_id, body, opts = {})
      v1_connections_carriers_fedex_settings_by_carrier_id_put_with_http_info(carrier_id, body, opts)
      nil
    end

    # fedex_account_carrier.update_settings
    # 
    # @param carrier_id 
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def v1_connections_carriers_fedex_settings_by_carrier_id_put_with_http_info(carrier_id, body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CarrierAccountsApi.v1_connections_carriers_fedex_settings_by_carrier_id_put ...'
      end
      # verify the required parameter 'carrier_id' is set
      if @api_client.config.client_side_validation && carrier_id.nil?
        fail ArgumentError, "Missing the required parameter 'carrier_id' when calling CarrierAccountsApi.v1_connections_carriers_fedex_settings_by_carrier_id_put"
      end
      if @api_client.config.client_side_validation && carrier_id.to_s.length > 25
        fail ArgumentError, 'invalid value for "carrier_id" when calling CarrierAccountsApi.v1_connections_carriers_fedex_settings_by_carrier_id_put, the character length must be smaller than or equal to 25.'
      end

      if @api_client.config.client_side_validation && carrier_id.to_s.length < 1
        fail ArgumentError, 'invalid value for "carrier_id" when calling CarrierAccountsApi.v1_connections_carriers_fedex_settings_by_carrier_id_put, the character length must be great than or equal to 1.'
      end

      if @api_client.config.client_side_validation && carrier_id !~ Regexp.new(/^se(-[a-z0-9]+)+$/)
        fail ArgumentError, "invalid value for 'carrier_id' when calling CarrierAccountsApi.v1_connections_carriers_fedex_settings_by_carrier_id_put, must conform to the pattern /^se(-[a-z0-9]+)+$/."
      end

      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling CarrierAccountsApi.v1_connections_carriers_fedex_settings_by_carrier_id_put"
      end
      # resource path
      local_var_path = '/v1/connections/carriers/fedex/{carrier_id}/settings'.sub('{' + 'carrier_id' + '}', carrier_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(body)
      auth_names = ['api-key']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CarrierAccountsApi#v1_connections_carriers_fedex_settings_by_carrier_id_put\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # fedex_uk_account_carrier.disconnect_account
    # 
    # @param carrier_id 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def v1_connections_carriers_fedex_uk_by_carrier_id_delete(carrier_id, opts = {})
      v1_connections_carriers_fedex_uk_by_carrier_id_delete_with_http_info(carrier_id, opts)
      nil
    end

    # fedex_uk_account_carrier.disconnect_account
    # 
    # @param carrier_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def v1_connections_carriers_fedex_uk_by_carrier_id_delete_with_http_info(carrier_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CarrierAccountsApi.v1_connections_carriers_fedex_uk_by_carrier_id_delete ...'
      end
      # verify the required parameter 'carrier_id' is set
      if @api_client.config.client_side_validation && carrier_id.nil?
        fail ArgumentError, "Missing the required parameter 'carrier_id' when calling CarrierAccountsApi.v1_connections_carriers_fedex_uk_by_carrier_id_delete"
      end
      if @api_client.config.client_side_validation && carrier_id.to_s.length > 25
        fail ArgumentError, 'invalid value for "carrier_id" when calling CarrierAccountsApi.v1_connections_carriers_fedex_uk_by_carrier_id_delete, the character length must be smaller than or equal to 25.'
      end

      if @api_client.config.client_side_validation && carrier_id.to_s.length < 1
        fail ArgumentError, 'invalid value for "carrier_id" when calling CarrierAccountsApi.v1_connections_carriers_fedex_uk_by_carrier_id_delete, the character length must be great than or equal to 1.'
      end

      if @api_client.config.client_side_validation && carrier_id !~ Regexp.new(/^se(-[a-z0-9]+)+$/)
        fail ArgumentError, "invalid value for 'carrier_id' when calling CarrierAccountsApi.v1_connections_carriers_fedex_uk_by_carrier_id_delete, must conform to the pattern /^se(-[a-z0-9]+)+$/."
      end

      # resource path
      local_var_path = '/v1/connections/carriers/fedex_uk/{carrier_id}'.sub('{' + 'carrier_id' + '}', carrier_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['api-key']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CarrierAccountsApi#v1_connections_carriers_fedex_uk_by_carrier_id_delete\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # fedex_uk_account_carrier.connect_account
    # 
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [ConnectAccountResponseBody]
    def v1_connections_carriers_fedex_uk_post(body, opts = {})
      data, _status_code, _headers = v1_connections_carriers_fedex_uk_post_with_http_info(body, opts)
      data
    end

    # fedex_uk_account_carrier.connect_account
    # 
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [Array<(ConnectAccountResponseBody, Fixnum, Hash)>] ConnectAccountResponseBody data, response status code and response headers
    def v1_connections_carriers_fedex_uk_post_with_http_info(body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CarrierAccountsApi.v1_connections_carriers_fedex_uk_post ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling CarrierAccountsApi.v1_connections_carriers_fedex_uk_post"
      end
      # resource path
      local_var_path = '/v1/connections/carriers/fedex_uk'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(body)
      auth_names = ['api-key']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ConnectAccountResponseBody')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CarrierAccountsApi#v1_connections_carriers_fedex_uk_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # first_mile_account_carrier.disconnect_account
    # 
    # @param carrier_id 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def v1_connections_carriers_firstmile_by_carrier_id_delete(carrier_id, opts = {})
      v1_connections_carriers_firstmile_by_carrier_id_delete_with_http_info(carrier_id, opts)
      nil
    end

    # first_mile_account_carrier.disconnect_account
    # 
    # @param carrier_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def v1_connections_carriers_firstmile_by_carrier_id_delete_with_http_info(carrier_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CarrierAccountsApi.v1_connections_carriers_firstmile_by_carrier_id_delete ...'
      end
      # verify the required parameter 'carrier_id' is set
      if @api_client.config.client_side_validation && carrier_id.nil?
        fail ArgumentError, "Missing the required parameter 'carrier_id' when calling CarrierAccountsApi.v1_connections_carriers_firstmile_by_carrier_id_delete"
      end
      if @api_client.config.client_side_validation && carrier_id.to_s.length > 25
        fail ArgumentError, 'invalid value for "carrier_id" when calling CarrierAccountsApi.v1_connections_carriers_firstmile_by_carrier_id_delete, the character length must be smaller than or equal to 25.'
      end

      if @api_client.config.client_side_validation && carrier_id.to_s.length < 1
        fail ArgumentError, 'invalid value for "carrier_id" when calling CarrierAccountsApi.v1_connections_carriers_firstmile_by_carrier_id_delete, the character length must be great than or equal to 1.'
      end

      if @api_client.config.client_side_validation && carrier_id !~ Regexp.new(/^se(-[a-z0-9]+)+$/)
        fail ArgumentError, "invalid value for 'carrier_id' when calling CarrierAccountsApi.v1_connections_carriers_firstmile_by_carrier_id_delete, must conform to the pattern /^se(-[a-z0-9]+)+$/."
      end

      # resource path
      local_var_path = '/v1/connections/carriers/firstmile/{carrier_id}'.sub('{' + 'carrier_id' + '}', carrier_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['api-key']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CarrierAccountsApi#v1_connections_carriers_firstmile_by_carrier_id_delete\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # first_mile_account_carrier.connect_account
    # 
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [ConnectAccountResponseBody]
    def v1_connections_carriers_firstmile_post(body, opts = {})
      data, _status_code, _headers = v1_connections_carriers_firstmile_post_with_http_info(body, opts)
      data
    end

    # first_mile_account_carrier.connect_account
    # 
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [Array<(ConnectAccountResponseBody, Fixnum, Hash)>] ConnectAccountResponseBody data, response status code and response headers
    def v1_connections_carriers_firstmile_post_with_http_info(body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CarrierAccountsApi.v1_connections_carriers_firstmile_post ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling CarrierAccountsApi.v1_connections_carriers_firstmile_post"
      end
      # resource path
      local_var_path = '/v1/connections/carriers/firstmile'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(body)
      auth_names = ['api-key']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ConnectAccountResponseBody')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CarrierAccountsApi#v1_connections_carriers_firstmile_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # globegistics_account_carrier.disconnect_account
    # 
    # @param carrier_id 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def v1_connections_carriers_globegistics_by_carrier_id_delete(carrier_id, opts = {})
      v1_connections_carriers_globegistics_by_carrier_id_delete_with_http_info(carrier_id, opts)
      nil
    end

    # globegistics_account_carrier.disconnect_account
    # 
    # @param carrier_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def v1_connections_carriers_globegistics_by_carrier_id_delete_with_http_info(carrier_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CarrierAccountsApi.v1_connections_carriers_globegistics_by_carrier_id_delete ...'
      end
      # verify the required parameter 'carrier_id' is set
      if @api_client.config.client_side_validation && carrier_id.nil?
        fail ArgumentError, "Missing the required parameter 'carrier_id' when calling CarrierAccountsApi.v1_connections_carriers_globegistics_by_carrier_id_delete"
      end
      if @api_client.config.client_side_validation && carrier_id.to_s.length > 25
        fail ArgumentError, 'invalid value for "carrier_id" when calling CarrierAccountsApi.v1_connections_carriers_globegistics_by_carrier_id_delete, the character length must be smaller than or equal to 25.'
      end

      if @api_client.config.client_side_validation && carrier_id.to_s.length < 1
        fail ArgumentError, 'invalid value for "carrier_id" when calling CarrierAccountsApi.v1_connections_carriers_globegistics_by_carrier_id_delete, the character length must be great than or equal to 1.'
      end

      if @api_client.config.client_side_validation && carrier_id !~ Regexp.new(/^se(-[a-z0-9]+)+$/)
        fail ArgumentError, "invalid value for 'carrier_id' when calling CarrierAccountsApi.v1_connections_carriers_globegistics_by_carrier_id_delete, must conform to the pattern /^se(-[a-z0-9]+)+$/."
      end

      # resource path
      local_var_path = '/v1/connections/carriers/globegistics/{carrier_id}'.sub('{' + 'carrier_id' + '}', carrier_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['api-key']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CarrierAccountsApi#v1_connections_carriers_globegistics_by_carrier_id_delete\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # globegistics_account_carrier.connect_account
    # 
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [ConnectAccountResponseBody]
    def v1_connections_carriers_globegistics_post(body, opts = {})
      data, _status_code, _headers = v1_connections_carriers_globegistics_post_with_http_info(body, opts)
      data
    end

    # globegistics_account_carrier.connect_account
    # 
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [Array<(ConnectAccountResponseBody, Fixnum, Hash)>] ConnectAccountResponseBody data, response status code and response headers
    def v1_connections_carriers_globegistics_post_with_http_info(body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CarrierAccountsApi.v1_connections_carriers_globegistics_post ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling CarrierAccountsApi.v1_connections_carriers_globegistics_post"
      end
      # resource path
      local_var_path = '/v1/connections/carriers/globegistics'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(body)
      auth_names = ['api-key']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ConnectAccountResponseBody')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CarrierAccountsApi#v1_connections_carriers_globegistics_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # imex_account_carrier.disconnect_account
    # 
    # @param carrier_id 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def v1_connections_carriers_imex_by_carrier_id_delete(carrier_id, opts = {})
      v1_connections_carriers_imex_by_carrier_id_delete_with_http_info(carrier_id, opts)
      nil
    end

    # imex_account_carrier.disconnect_account
    # 
    # @param carrier_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def v1_connections_carriers_imex_by_carrier_id_delete_with_http_info(carrier_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CarrierAccountsApi.v1_connections_carriers_imex_by_carrier_id_delete ...'
      end
      # verify the required parameter 'carrier_id' is set
      if @api_client.config.client_side_validation && carrier_id.nil?
        fail ArgumentError, "Missing the required parameter 'carrier_id' when calling CarrierAccountsApi.v1_connections_carriers_imex_by_carrier_id_delete"
      end
      if @api_client.config.client_side_validation && carrier_id.to_s.length > 25
        fail ArgumentError, 'invalid value for "carrier_id" when calling CarrierAccountsApi.v1_connections_carriers_imex_by_carrier_id_delete, the character length must be smaller than or equal to 25.'
      end

      if @api_client.config.client_side_validation && carrier_id.to_s.length < 1
        fail ArgumentError, 'invalid value for "carrier_id" when calling CarrierAccountsApi.v1_connections_carriers_imex_by_carrier_id_delete, the character length must be great than or equal to 1.'
      end

      if @api_client.config.client_side_validation && carrier_id !~ Regexp.new(/^se(-[a-z0-9]+)+$/)
        fail ArgumentError, "invalid value for 'carrier_id' when calling CarrierAccountsApi.v1_connections_carriers_imex_by_carrier_id_delete, must conform to the pattern /^se(-[a-z0-9]+)+$/."
      end

      # resource path
      local_var_path = '/v1/connections/carriers/imex/{carrier_id}'.sub('{' + 'carrier_id' + '}', carrier_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['api-key']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CarrierAccountsApi#v1_connections_carriers_imex_by_carrier_id_delete\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # imex_account_carrier.connect_account
    # 
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [ConnectAccountResponseBody]
    def v1_connections_carriers_imex_post(body, opts = {})
      data, _status_code, _headers = v1_connections_carriers_imex_post_with_http_info(body, opts)
      data
    end

    # imex_account_carrier.connect_account
    # 
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [Array<(ConnectAccountResponseBody, Fixnum, Hash)>] ConnectAccountResponseBody data, response status code and response headers
    def v1_connections_carriers_imex_post_with_http_info(body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CarrierAccountsApi.v1_connections_carriers_imex_post ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling CarrierAccountsApi.v1_connections_carriers_imex_post"
      end
      # resource path
      local_var_path = '/v1/connections/carriers/imex'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(body)
      auth_names = ['api-key']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ConnectAccountResponseBody')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CarrierAccountsApi#v1_connections_carriers_imex_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # newgistics_account_carrier.disconnect_account
    # 
    # @param carrier_id 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def v1_connections_carriers_newgistics_by_carrier_id_delete(carrier_id, opts = {})
      v1_connections_carriers_newgistics_by_carrier_id_delete_with_http_info(carrier_id, opts)
      nil
    end

    # newgistics_account_carrier.disconnect_account
    # 
    # @param carrier_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def v1_connections_carriers_newgistics_by_carrier_id_delete_with_http_info(carrier_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CarrierAccountsApi.v1_connections_carriers_newgistics_by_carrier_id_delete ...'
      end
      # verify the required parameter 'carrier_id' is set
      if @api_client.config.client_side_validation && carrier_id.nil?
        fail ArgumentError, "Missing the required parameter 'carrier_id' when calling CarrierAccountsApi.v1_connections_carriers_newgistics_by_carrier_id_delete"
      end
      if @api_client.config.client_side_validation && carrier_id.to_s.length > 25
        fail ArgumentError, 'invalid value for "carrier_id" when calling CarrierAccountsApi.v1_connections_carriers_newgistics_by_carrier_id_delete, the character length must be smaller than or equal to 25.'
      end

      if @api_client.config.client_side_validation && carrier_id.to_s.length < 1
        fail ArgumentError, 'invalid value for "carrier_id" when calling CarrierAccountsApi.v1_connections_carriers_newgistics_by_carrier_id_delete, the character length must be great than or equal to 1.'
      end

      if @api_client.config.client_side_validation && carrier_id !~ Regexp.new(/^se(-[a-z0-9]+)+$/)
        fail ArgumentError, "invalid value for 'carrier_id' when calling CarrierAccountsApi.v1_connections_carriers_newgistics_by_carrier_id_delete, must conform to the pattern /^se(-[a-z0-9]+)+$/."
      end

      # resource path
      local_var_path = '/v1/connections/carriers/newgistics/{carrier_id}'.sub('{' + 'carrier_id' + '}', carrier_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['api-key']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CarrierAccountsApi#v1_connections_carriers_newgistics_by_carrier_id_delete\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # newgistics_account_carrier.connect_account
    # 
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [ConnectAccountResponseBody]
    def v1_connections_carriers_newgistics_post(body, opts = {})
      data, _status_code, _headers = v1_connections_carriers_newgistics_post_with_http_info(body, opts)
      data
    end

    # newgistics_account_carrier.connect_account
    # 
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [Array<(ConnectAccountResponseBody, Fixnum, Hash)>] ConnectAccountResponseBody data, response status code and response headers
    def v1_connections_carriers_newgistics_post_with_http_info(body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CarrierAccountsApi.v1_connections_carriers_newgistics_post ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling CarrierAccountsApi.v1_connections_carriers_newgistics_post"
      end
      # resource path
      local_var_path = '/v1/connections/carriers/newgistics'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(body)
      auth_names = ['api-key']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ConnectAccountResponseBody')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CarrierAccountsApi#v1_connections_carriers_newgistics_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # newgistics_account_carrier.update_settings
    # 
    # @param carrier_id 
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def v1_connections_carriers_newgistics_settings_by_carrier_id_put(carrier_id, body, opts = {})
      v1_connections_carriers_newgistics_settings_by_carrier_id_put_with_http_info(carrier_id, body, opts)
      nil
    end

    # newgistics_account_carrier.update_settings
    # 
    # @param carrier_id 
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def v1_connections_carriers_newgistics_settings_by_carrier_id_put_with_http_info(carrier_id, body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CarrierAccountsApi.v1_connections_carriers_newgistics_settings_by_carrier_id_put ...'
      end
      # verify the required parameter 'carrier_id' is set
      if @api_client.config.client_side_validation && carrier_id.nil?
        fail ArgumentError, "Missing the required parameter 'carrier_id' when calling CarrierAccountsApi.v1_connections_carriers_newgistics_settings_by_carrier_id_put"
      end
      if @api_client.config.client_side_validation && carrier_id.to_s.length > 25
        fail ArgumentError, 'invalid value for "carrier_id" when calling CarrierAccountsApi.v1_connections_carriers_newgistics_settings_by_carrier_id_put, the character length must be smaller than or equal to 25.'
      end

      if @api_client.config.client_side_validation && carrier_id.to_s.length < 1
        fail ArgumentError, 'invalid value for "carrier_id" when calling CarrierAccountsApi.v1_connections_carriers_newgistics_settings_by_carrier_id_put, the character length must be great than or equal to 1.'
      end

      if @api_client.config.client_side_validation && carrier_id !~ Regexp.new(/^se(-[a-z0-9]+)+$/)
        fail ArgumentError, "invalid value for 'carrier_id' when calling CarrierAccountsApi.v1_connections_carriers_newgistics_settings_by_carrier_id_put, must conform to the pattern /^se(-[a-z0-9]+)+$/."
      end

      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling CarrierAccountsApi.v1_connections_carriers_newgistics_settings_by_carrier_id_put"
      end
      # resource path
      local_var_path = '/v1/connections/carriers/newgistics/{carrier_id}/settings'.sub('{' + 'carrier_id' + '}', carrier_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(body)
      auth_names = ['api-key']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CarrierAccountsApi#v1_connections_carriers_newgistics_settings_by_carrier_id_put\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # ontrac_account_carrier.disconnect_account
    # 
    # @param carrier_id 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def v1_connections_carriers_ontrac_by_carrier_id_delete(carrier_id, opts = {})
      v1_connections_carriers_ontrac_by_carrier_id_delete_with_http_info(carrier_id, opts)
      nil
    end

    # ontrac_account_carrier.disconnect_account
    # 
    # @param carrier_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def v1_connections_carriers_ontrac_by_carrier_id_delete_with_http_info(carrier_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CarrierAccountsApi.v1_connections_carriers_ontrac_by_carrier_id_delete ...'
      end
      # verify the required parameter 'carrier_id' is set
      if @api_client.config.client_side_validation && carrier_id.nil?
        fail ArgumentError, "Missing the required parameter 'carrier_id' when calling CarrierAccountsApi.v1_connections_carriers_ontrac_by_carrier_id_delete"
      end
      if @api_client.config.client_side_validation && carrier_id.to_s.length > 25
        fail ArgumentError, 'invalid value for "carrier_id" when calling CarrierAccountsApi.v1_connections_carriers_ontrac_by_carrier_id_delete, the character length must be smaller than or equal to 25.'
      end

      if @api_client.config.client_side_validation && carrier_id.to_s.length < 1
        fail ArgumentError, 'invalid value for "carrier_id" when calling CarrierAccountsApi.v1_connections_carriers_ontrac_by_carrier_id_delete, the character length must be great than or equal to 1.'
      end

      if @api_client.config.client_side_validation && carrier_id !~ Regexp.new(/^se(-[a-z0-9]+)+$/)
        fail ArgumentError, "invalid value for 'carrier_id' when calling CarrierAccountsApi.v1_connections_carriers_ontrac_by_carrier_id_delete, must conform to the pattern /^se(-[a-z0-9]+)+$/."
      end

      # resource path
      local_var_path = '/v1/connections/carriers/ontrac/{carrier_id}'.sub('{' + 'carrier_id' + '}', carrier_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['api-key']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CarrierAccountsApi#v1_connections_carriers_ontrac_by_carrier_id_delete\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # ontrac_account_carrier.connect_account
    # 
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [ConnectAccountResponseBody]
    def v1_connections_carriers_ontrac_post(body, opts = {})
      data, _status_code, _headers = v1_connections_carriers_ontrac_post_with_http_info(body, opts)
      data
    end

    # ontrac_account_carrier.connect_account
    # 
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [Array<(ConnectAccountResponseBody, Fixnum, Hash)>] ConnectAccountResponseBody data, response status code and response headers
    def v1_connections_carriers_ontrac_post_with_http_info(body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CarrierAccountsApi.v1_connections_carriers_ontrac_post ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling CarrierAccountsApi.v1_connections_carriers_ontrac_post"
      end
      # resource path
      local_var_path = '/v1/connections/carriers/ontrac'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(body)
      auth_names = ['api-key']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ConnectAccountResponseBody')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CarrierAccountsApi#v1_connections_carriers_ontrac_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # royal_mail_account_carrier.disconnect_account
    # 
    # @param carrier_id 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def v1_connections_carriers_royal_mail_by_carrier_id_delete(carrier_id, opts = {})
      v1_connections_carriers_royal_mail_by_carrier_id_delete_with_http_info(carrier_id, opts)
      nil
    end

    # royal_mail_account_carrier.disconnect_account
    # 
    # @param carrier_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def v1_connections_carriers_royal_mail_by_carrier_id_delete_with_http_info(carrier_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CarrierAccountsApi.v1_connections_carriers_royal_mail_by_carrier_id_delete ...'
      end
      # verify the required parameter 'carrier_id' is set
      if @api_client.config.client_side_validation && carrier_id.nil?
        fail ArgumentError, "Missing the required parameter 'carrier_id' when calling CarrierAccountsApi.v1_connections_carriers_royal_mail_by_carrier_id_delete"
      end
      if @api_client.config.client_side_validation && carrier_id.to_s.length > 25
        fail ArgumentError, 'invalid value for "carrier_id" when calling CarrierAccountsApi.v1_connections_carriers_royal_mail_by_carrier_id_delete, the character length must be smaller than or equal to 25.'
      end

      if @api_client.config.client_side_validation && carrier_id.to_s.length < 1
        fail ArgumentError, 'invalid value for "carrier_id" when calling CarrierAccountsApi.v1_connections_carriers_royal_mail_by_carrier_id_delete, the character length must be great than or equal to 1.'
      end

      if @api_client.config.client_side_validation && carrier_id !~ Regexp.new(/^se(-[a-z0-9]+)+$/)
        fail ArgumentError, "invalid value for 'carrier_id' when calling CarrierAccountsApi.v1_connections_carriers_royal_mail_by_carrier_id_delete, must conform to the pattern /^se(-[a-z0-9]+)+$/."
      end

      # resource path
      local_var_path = '/v1/connections/carriers/royal_mail/{carrier_id}'.sub('{' + 'carrier_id' + '}', carrier_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['api-key']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CarrierAccountsApi#v1_connections_carriers_royal_mail_by_carrier_id_delete\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # royal_mail_account_carrier.connect_account
    # 
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [ConnectAccountResponseBody]
    def v1_connections_carriers_royal_mail_post(body, opts = {})
      data, _status_code, _headers = v1_connections_carriers_royal_mail_post_with_http_info(body, opts)
      data
    end

    # royal_mail_account_carrier.connect_account
    # 
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [Array<(ConnectAccountResponseBody, Fixnum, Hash)>] ConnectAccountResponseBody data, response status code and response headers
    def v1_connections_carriers_royal_mail_post_with_http_info(body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CarrierAccountsApi.v1_connections_carriers_royal_mail_post ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling CarrierAccountsApi.v1_connections_carriers_royal_mail_post"
      end
      # resource path
      local_var_path = '/v1/connections/carriers/royal_mail'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(body)
      auth_names = ['api-key']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ConnectAccountResponseBody')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CarrierAccountsApi#v1_connections_carriers_royal_mail_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # rr_donnelley_account_carrier.disconnect_account
    # 
    # @param carrier_id 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def v1_connections_carriers_rr_donnelley_by_carrier_id_delete(carrier_id, opts = {})
      v1_connections_carriers_rr_donnelley_by_carrier_id_delete_with_http_info(carrier_id, opts)
      nil
    end

    # rr_donnelley_account_carrier.disconnect_account
    # 
    # @param carrier_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def v1_connections_carriers_rr_donnelley_by_carrier_id_delete_with_http_info(carrier_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CarrierAccountsApi.v1_connections_carriers_rr_donnelley_by_carrier_id_delete ...'
      end
      # verify the required parameter 'carrier_id' is set
      if @api_client.config.client_side_validation && carrier_id.nil?
        fail ArgumentError, "Missing the required parameter 'carrier_id' when calling CarrierAccountsApi.v1_connections_carriers_rr_donnelley_by_carrier_id_delete"
      end
      if @api_client.config.client_side_validation && carrier_id.to_s.length > 25
        fail ArgumentError, 'invalid value for "carrier_id" when calling CarrierAccountsApi.v1_connections_carriers_rr_donnelley_by_carrier_id_delete, the character length must be smaller than or equal to 25.'
      end

      if @api_client.config.client_side_validation && carrier_id.to_s.length < 1
        fail ArgumentError, 'invalid value for "carrier_id" when calling CarrierAccountsApi.v1_connections_carriers_rr_donnelley_by_carrier_id_delete, the character length must be great than or equal to 1.'
      end

      if @api_client.config.client_side_validation && carrier_id !~ Regexp.new(/^se(-[a-z0-9]+)+$/)
        fail ArgumentError, "invalid value for 'carrier_id' when calling CarrierAccountsApi.v1_connections_carriers_rr_donnelley_by_carrier_id_delete, must conform to the pattern /^se(-[a-z0-9]+)+$/."
      end

      # resource path
      local_var_path = '/v1/connections/carriers/rr_donnelley/{carrier_id}'.sub('{' + 'carrier_id' + '}', carrier_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['api-key']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CarrierAccountsApi#v1_connections_carriers_rr_donnelley_by_carrier_id_delete\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # rr_donnelley_account_carrier.connect_account
    # 
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [ConnectAccountResponseBody]
    def v1_connections_carriers_rr_donnelley_post(body, opts = {})
      data, _status_code, _headers = v1_connections_carriers_rr_donnelley_post_with_http_info(body, opts)
      data
    end

    # rr_donnelley_account_carrier.connect_account
    # 
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [Array<(ConnectAccountResponseBody, Fixnum, Hash)>] ConnectAccountResponseBody data, response status code and response headers
    def v1_connections_carriers_rr_donnelley_post_with_http_info(body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CarrierAccountsApi.v1_connections_carriers_rr_donnelley_post ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling CarrierAccountsApi.v1_connections_carriers_rr_donnelley_post"
      end
      # resource path
      local_var_path = '/v1/connections/carriers/rr_donnelley'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(body)
      auth_names = ['api-key']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ConnectAccountResponseBody')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CarrierAccountsApi#v1_connections_carriers_rr_donnelley_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # stamps_account_carrier.disconnect_account
    # 
    # @param carrier_id 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def v1_connections_carriers_stamps_com_by_carrier_id_delete(carrier_id, opts = {})
      v1_connections_carriers_stamps_com_by_carrier_id_delete_with_http_info(carrier_id, opts)
      nil
    end

    # stamps_account_carrier.disconnect_account
    # 
    # @param carrier_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def v1_connections_carriers_stamps_com_by_carrier_id_delete_with_http_info(carrier_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CarrierAccountsApi.v1_connections_carriers_stamps_com_by_carrier_id_delete ...'
      end
      # verify the required parameter 'carrier_id' is set
      if @api_client.config.client_side_validation && carrier_id.nil?
        fail ArgumentError, "Missing the required parameter 'carrier_id' when calling CarrierAccountsApi.v1_connections_carriers_stamps_com_by_carrier_id_delete"
      end
      if @api_client.config.client_side_validation && carrier_id.to_s.length > 25
        fail ArgumentError, 'invalid value for "carrier_id" when calling CarrierAccountsApi.v1_connections_carriers_stamps_com_by_carrier_id_delete, the character length must be smaller than or equal to 25.'
      end

      if @api_client.config.client_side_validation && carrier_id.to_s.length < 1
        fail ArgumentError, 'invalid value for "carrier_id" when calling CarrierAccountsApi.v1_connections_carriers_stamps_com_by_carrier_id_delete, the character length must be great than or equal to 1.'
      end

      if @api_client.config.client_side_validation && carrier_id !~ Regexp.new(/^se(-[a-z0-9]+)+$/)
        fail ArgumentError, "invalid value for 'carrier_id' when calling CarrierAccountsApi.v1_connections_carriers_stamps_com_by_carrier_id_delete, must conform to the pattern /^se(-[a-z0-9]+)+$/."
      end

      # resource path
      local_var_path = '/v1/connections/carriers/stamps_com/{carrier_id}'.sub('{' + 'carrier_id' + '}', carrier_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['api-key']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CarrierAccountsApi#v1_connections_carriers_stamps_com_by_carrier_id_delete\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # stamps_account_carrier.connect_account
    # 
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [ConnectAccountResponseBody]
    def v1_connections_carriers_stamps_com_post(body, opts = {})
      data, _status_code, _headers = v1_connections_carriers_stamps_com_post_with_http_info(body, opts)
      data
    end

    # stamps_account_carrier.connect_account
    # 
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [Array<(ConnectAccountResponseBody, Fixnum, Hash)>] ConnectAccountResponseBody data, response status code and response headers
    def v1_connections_carriers_stamps_com_post_with_http_info(body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CarrierAccountsApi.v1_connections_carriers_stamps_com_post ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling CarrierAccountsApi.v1_connections_carriers_stamps_com_post"
      end
      # resource path
      local_var_path = '/v1/connections/carriers/stamps_com'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(body)
      auth_names = ['api-key']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ConnectAccountResponseBody')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CarrierAccountsApi#v1_connections_carriers_stamps_com_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # stamps_account_carrier.get_account_url
    # 
    # @param carrier_id 
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [StampsAccountUrlsResponseBody]
    def v1_connections_carriers_stamps_com_request_account_url_by_carrier_id_put(carrier_id, body, opts = {})
      data, _status_code, _headers = v1_connections_carriers_stamps_com_request_account_url_by_carrier_id_put_with_http_info(carrier_id, body, opts)
      data
    end

    # stamps_account_carrier.get_account_url
    # 
    # @param carrier_id 
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [Array<(StampsAccountUrlsResponseBody, Fixnum, Hash)>] StampsAccountUrlsResponseBody data, response status code and response headers
    def v1_connections_carriers_stamps_com_request_account_url_by_carrier_id_put_with_http_info(carrier_id, body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CarrierAccountsApi.v1_connections_carriers_stamps_com_request_account_url_by_carrier_id_put ...'
      end
      # verify the required parameter 'carrier_id' is set
      if @api_client.config.client_side_validation && carrier_id.nil?
        fail ArgumentError, "Missing the required parameter 'carrier_id' when calling CarrierAccountsApi.v1_connections_carriers_stamps_com_request_account_url_by_carrier_id_put"
      end
      if @api_client.config.client_side_validation && carrier_id.to_s.length > 25
        fail ArgumentError, 'invalid value for "carrier_id" when calling CarrierAccountsApi.v1_connections_carriers_stamps_com_request_account_url_by_carrier_id_put, the character length must be smaller than or equal to 25.'
      end

      if @api_client.config.client_side_validation && carrier_id.to_s.length < 1
        fail ArgumentError, 'invalid value for "carrier_id" when calling CarrierAccountsApi.v1_connections_carriers_stamps_com_request_account_url_by_carrier_id_put, the character length must be great than or equal to 1.'
      end

      if @api_client.config.client_side_validation && carrier_id !~ Regexp.new(/^se(-[a-z0-9]+)+$/)
        fail ArgumentError, "invalid value for 'carrier_id' when calling CarrierAccountsApi.v1_connections_carriers_stamps_com_request_account_url_by_carrier_id_put, must conform to the pattern /^se(-[a-z0-9]+)+$/."
      end

      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling CarrierAccountsApi.v1_connections_carriers_stamps_com_request_account_url_by_carrier_id_put"
      end
      # resource path
      local_var_path = '/v1/connections/carriers/stamps_com/{carrier_id}/request_account_url'.sub('{' + 'carrier_id' + '}', carrier_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(body)
      auth_names = ['api-key']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'StampsAccountUrlsResponseBody')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CarrierAccountsApi#v1_connections_carriers_stamps_com_request_account_url_by_carrier_id_put\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # ups_account_carrier.disconnect_account
    # 
    # @param carrier_id 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def v1_connections_carriers_ups_by_carrier_id_delete(carrier_id, opts = {})
      v1_connections_carriers_ups_by_carrier_id_delete_with_http_info(carrier_id, opts)
      nil
    end

    # ups_account_carrier.disconnect_account
    # 
    # @param carrier_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def v1_connections_carriers_ups_by_carrier_id_delete_with_http_info(carrier_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CarrierAccountsApi.v1_connections_carriers_ups_by_carrier_id_delete ...'
      end
      # verify the required parameter 'carrier_id' is set
      if @api_client.config.client_side_validation && carrier_id.nil?
        fail ArgumentError, "Missing the required parameter 'carrier_id' when calling CarrierAccountsApi.v1_connections_carriers_ups_by_carrier_id_delete"
      end
      if @api_client.config.client_side_validation && carrier_id.to_s.length > 25
        fail ArgumentError, 'invalid value for "carrier_id" when calling CarrierAccountsApi.v1_connections_carriers_ups_by_carrier_id_delete, the character length must be smaller than or equal to 25.'
      end

      if @api_client.config.client_side_validation && carrier_id.to_s.length < 1
        fail ArgumentError, 'invalid value for "carrier_id" when calling CarrierAccountsApi.v1_connections_carriers_ups_by_carrier_id_delete, the character length must be great than or equal to 1.'
      end

      if @api_client.config.client_side_validation && carrier_id !~ Regexp.new(/^se(-[a-z0-9]+)+$/)
        fail ArgumentError, "invalid value for 'carrier_id' when calling CarrierAccountsApi.v1_connections_carriers_ups_by_carrier_id_delete, must conform to the pattern /^se(-[a-z0-9]+)+$/."
      end

      # resource path
      local_var_path = '/v1/connections/carriers/ups/{carrier_id}'.sub('{' + 'carrier_id' + '}', carrier_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['api-key']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CarrierAccountsApi#v1_connections_carriers_ups_by_carrier_id_delete\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # ups_account_carrier.connect_account
    # 
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [ConnectAccountResponseBody]
    def v1_connections_carriers_ups_post(body, opts = {})
      data, _status_code, _headers = v1_connections_carriers_ups_post_with_http_info(body, opts)
      data
    end

    # ups_account_carrier.connect_account
    # 
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [Array<(ConnectAccountResponseBody, Fixnum, Hash)>] ConnectAccountResponseBody data, response status code and response headers
    def v1_connections_carriers_ups_post_with_http_info(body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CarrierAccountsApi.v1_connections_carriers_ups_post ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling CarrierAccountsApi.v1_connections_carriers_ups_post"
      end
      # resource path
      local_var_path = '/v1/connections/carriers/ups'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(body)
      auth_names = ['api-key']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ConnectAccountResponseBody')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CarrierAccountsApi#v1_connections_carriers_ups_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # ups_account_carrier.get_settings
    # 
    # @param carrier_id 
    # @param [Hash] opts the optional parameters
    # @return [UpsAccountSettings]
    def v1_connections_carriers_ups_settings_by_carrier_id_get(carrier_id, opts = {})
      data, _status_code, _headers = v1_connections_carriers_ups_settings_by_carrier_id_get_with_http_info(carrier_id, opts)
      data
    end

    # ups_account_carrier.get_settings
    # 
    # @param carrier_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(UpsAccountSettings, Fixnum, Hash)>] UpsAccountSettings data, response status code and response headers
    def v1_connections_carriers_ups_settings_by_carrier_id_get_with_http_info(carrier_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CarrierAccountsApi.v1_connections_carriers_ups_settings_by_carrier_id_get ...'
      end
      # verify the required parameter 'carrier_id' is set
      if @api_client.config.client_side_validation && carrier_id.nil?
        fail ArgumentError, "Missing the required parameter 'carrier_id' when calling CarrierAccountsApi.v1_connections_carriers_ups_settings_by_carrier_id_get"
      end
      if @api_client.config.client_side_validation && carrier_id.to_s.length > 25
        fail ArgumentError, 'invalid value for "carrier_id" when calling CarrierAccountsApi.v1_connections_carriers_ups_settings_by_carrier_id_get, the character length must be smaller than or equal to 25.'
      end

      if @api_client.config.client_side_validation && carrier_id.to_s.length < 1
        fail ArgumentError, 'invalid value for "carrier_id" when calling CarrierAccountsApi.v1_connections_carriers_ups_settings_by_carrier_id_get, the character length must be great than or equal to 1.'
      end

      if @api_client.config.client_side_validation && carrier_id !~ Regexp.new(/^se(-[a-z0-9]+)+$/)
        fail ArgumentError, "invalid value for 'carrier_id' when calling CarrierAccountsApi.v1_connections_carriers_ups_settings_by_carrier_id_get, must conform to the pattern /^se(-[a-z0-9]+)+$/."
      end

      # resource path
      local_var_path = '/v1/connections/carriers/ups/{carrier_id}/settings'.sub('{' + 'carrier_id' + '}', carrier_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['api-key']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'UpsAccountSettings')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CarrierAccountsApi#v1_connections_carriers_ups_settings_by_carrier_id_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # ups_account_carrier.update_settings
    # 
    # @param carrier_id 
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def v1_connections_carriers_ups_settings_by_carrier_id_put(carrier_id, body, opts = {})
      v1_connections_carriers_ups_settings_by_carrier_id_put_with_http_info(carrier_id, body, opts)
      nil
    end

    # ups_account_carrier.update_settings
    # 
    # @param carrier_id 
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def v1_connections_carriers_ups_settings_by_carrier_id_put_with_http_info(carrier_id, body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CarrierAccountsApi.v1_connections_carriers_ups_settings_by_carrier_id_put ...'
      end
      # verify the required parameter 'carrier_id' is set
      if @api_client.config.client_side_validation && carrier_id.nil?
        fail ArgumentError, "Missing the required parameter 'carrier_id' when calling CarrierAccountsApi.v1_connections_carriers_ups_settings_by_carrier_id_put"
      end
      if @api_client.config.client_side_validation && carrier_id.to_s.length > 25
        fail ArgumentError, 'invalid value for "carrier_id" when calling CarrierAccountsApi.v1_connections_carriers_ups_settings_by_carrier_id_put, the character length must be smaller than or equal to 25.'
      end

      if @api_client.config.client_side_validation && carrier_id.to_s.length < 1
        fail ArgumentError, 'invalid value for "carrier_id" when calling CarrierAccountsApi.v1_connections_carriers_ups_settings_by_carrier_id_put, the character length must be great than or equal to 1.'
      end

      if @api_client.config.client_side_validation && carrier_id !~ Regexp.new(/^se(-[a-z0-9]+)+$/)
        fail ArgumentError, "invalid value for 'carrier_id' when calling CarrierAccountsApi.v1_connections_carriers_ups_settings_by_carrier_id_put, must conform to the pattern /^se(-[a-z0-9]+)+$/."
      end

      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling CarrierAccountsApi.v1_connections_carriers_ups_settings_by_carrier_id_put"
      end
      # resource path
      local_var_path = '/v1/connections/carriers/ups/{carrier_id}/settings'.sub('{' + 'carrier_id' + '}', carrier_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(body)
      auth_names = ['api-key']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CarrierAccountsApi#v1_connections_carriers_ups_settings_by_carrier_id_put\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
